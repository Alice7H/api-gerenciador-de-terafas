generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  member
}

enum TaskStatus {
  pending
  in_progress
  completed
}

enum TaskPriority {
  high
  medium
  low
}

model Users {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  email     String    @unique @db.VarChar(150)
  password  String    @db.VarChar(255)
  role      UserRole  @default(member)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  teamMembers  TeamMembers[]
  tasks        Tasks[]
  tasksHistory TaskHistory[]

  @@map("users")
}

model Teams {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  teamMembers TeamMembers[]
  tasks       Tasks[]

  @@map("teams")
}

model TeamMembers {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  teamId    Int      @map("team_id")
  createdAt DateTime @default(now()) @map("created_at")

  user Users @relation(fields: [userId], references: [id])
  team Teams @relation(fields: [teamId], references: [id])

  @@map("team_members")
}

model Tasks {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(200)
  description  String?
  status       TaskStatus
  priority     TaskPriority
  assignedTo   Int           @map("assigned_to")
  teamId       Int
  team         Teams         @relation(fields: [teamId], references: [id])
  user         Users         @relation(fields: [assignedTo], references: [id])
  tasksHistory TaskHistory[]

  @@map("tasks")
}

model TaskHistory {
  id        Int        @id @default(autoincrement())
  taskId    Int        @map("task_id")
  changedBy Int        @map("changed_by")
  oldStatus TaskStatus @map("old_status")
  newStatus TaskStatus @map("new_status")
  changedAt DateTime   @default(now()) @map("changed_at")

  task Tasks @relation(fields: [taskId], references: [id])
  user Users @relation(fields: [changedBy], references: [id])

  @@map("task_history")
}